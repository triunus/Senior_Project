※ "Button, Toggle, Dropdown, Slider, Scrollbar, TestMeshPro - Input Field" Component
 위의 컴포너트들은
 - 상호작용 UI 컴포넌트 공용 옵션 ( Interactable, Transition, Navigation )
 - 각 UI 컴포넌트만의 특성에 맞는 옵션
 - 버튼을 누르거나 값이 변경될 때 호출되도록 등록하는 이벤트 등록 옵션
으로 구성된다!!!!!!!!


1. 상호작용 UI 컴포넌트 공용 옵션

1) Interactable 옵션
 - 오브젝트와의 상호작용을 활성/비활성화 하는 변수
 - 비활성화 상태가 되면 상호작용 컴포넌트에 있는 모든 기능 중지
  ( Button Component의 경우, Transition과 Onclick() 옵션을 사용하지 못하게 된다. )


2) Transition
 - 오브젝트와 마우스(터치)가 상호작용하는 상태에 따라 오브젝트의 색상/이미지/애니메이션을 바꾸는 기능.

(1) Transition - Color Tint 속성
 - 마우스와 오브젝트의 상호작용에 따라 색상 변경
 - Normal, Highlighted, Pressed, Selected, Disabled에 색상을 설정한다.

(2) Transition - Sprite Swap
 - 마우스와 오브젝트의 상호작용에 따라 이미지 변경.
 - 기본 이미지는 "Image" 컴포넌트에 설정. <---- image 컴포넌트 필수.
 - 기본 이미지(Normal)를 제외한, 4개의 상태에 이미지를 설정한다.

(3) Transition - Animation
 - 마우스와 오브젝트의 상호작용에 따라 미리 등록한 애니메이션으로 변경.

 tip. "Auto Generate Animation" 버튼을 클릭하면, 자동으로 오브젝트에 "Animator" 컴포넌트를 추가해 준다.
     설정이 완료된 Animator Controller와 Animation이 생성되기 때문에, Animation 탭에서 애니메이션만 수정해서 사용하면 된다.


3) Navigation
 - 여러 개의 오브젝트가 화면에 배치되어 있을 경우, 방향키를 눌러 다른 오브젝트로 옮겨갈 수 있도록 하는 기능이다.
  ( 서로 다른 상호작용 오브젝트 사이에도 이동이 가능하다. )

(1) Navigation - Horizontal
 - 좌/우 방향키로 이동 (오브젝트의 배치를 가로로 두어야 한다. )

(2) Navigation - Vertical
 - 상/하 방향키로 이동 (오브젝트의 배치를 세로로 두어야 한다. )

(3) Navigation - Automatic
 - Horizontal, Vertical 둘 다 체크되었을 때 활성화 되는 옵션이다.

(4) Navigation - Explicit
 - 각 오브젝트에서 상/하/좌/우 키를 눌렀을 때 이동할 오브젝트 설정.

(5) Visualize 버튼
 - Navigation 연결 구조를 Scene View에서 화살표로 표시하여 보여준다.




2. Button - TextMeshpro GameObject
 - 버튼을 클릭했을 때 미리 지정해둔 메소드를 실행시키는 상호작용 UI이다.

1) Button Component
 - 버튼의 이미지를 보여주고, 마우스(터치)와 상호작용한다.

(1) OnClick() 메소드
 - 버튼을 눌렀을 때 호출하고 싶은 이벤트 등록.
 - Hierarchy View에 있는 게임오브젝트-컴포넌트-메소드-매개변수 등록.

Tip. 이벤트는 원하는 개수만큼 등록이 가능하다. <--- 버튼 하나를 클릭했을 때, 여러개의 메소드 실행 가능.
Tip. 매개변수는 1개 까지만 설정 가능하다.
      매개변수가 없으면 매개변수 입력 필드가 보이지 않는다.
      매개변수가 2개 이상인 메소드는 선택할 수 없다.
Tip. 해당 기능은 코드를 사용하여 작성이 가능하다.
      다만, 매개변수가 없는 경우에만 사용할 수 있으므로 주의해야 한다.
      UnityEngine.UI Namespace를 사용,
      [SerializeField] 기능을 통해 해당 Button 객체 등록,
      Awake() { button.onClick.AddListner(Event.UnityAction call) }을 통해 사용한다.
      ( Event.UnityAction는 매개변수가 없는 메소드를 뜻함 )

2) Text(TMP)
 - 버튼 이미지 위의 텍스트를 출력한다. 




